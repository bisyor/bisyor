<?php

namespace backend\models\references;

use backend\models\users\Users;
use common\models\User;
use Yii;

/**
 * This is the model class for table "social_networks".
 *
 * @property int $id
 * @property string|null $name Наименование
 * @property string|null $icon Иконка
 * @property bool|null $status Статус
 */
class SocialNetworks extends \yii\db\ActiveRecord
{
    /**
     * {@inheritdoc}
     */
    const DIR_NAME = 'social_icons';
    public $image;
    public static function tableName()
    {
        return 'social_networks';
    }

    /**
     * {@inheritdoc}
     */
    public function rules()
    {
        return [
            [['status'], 'boolean'],
            [['name', 'icon'], 'string', 'max' => 255],
            [['name'], 'required'],
            ['image', 'safe'],
            [['image'], 'file', 'skipOnEmpty' => true, 'extensions' => 'png, jpg, jpeg, ico,',],
        ];
    }

    /**
     * {@inheritdoc}
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'name' => 'Наименование',
            'icon' => 'Иконка',
            'status' => 'Статус',
        ];
    }


    /**
     * ochirilganda shu modelga tegishli rasmni xam ochirrish
     * @return bool
     */
    public function beforeDelete()
    {
        $dir = '/web/uploads/'.self::DIR_NAME.'/';
        $conn_id = Users::connectFtp();
        if($this->icon != null){
            if(ftp_size($conn_id, $dir.$this->icon) != -1){
                ftp_delete($conn_id, $dir . $this->icon);
            }
        }
        return parent::beforeDelete(); // TODO: Change the autogenerated stub
    }


    /**
     * rasm upload qilish
     * @return string
     * @throws \yii\db\Exception
     */
    public function upload()
    {
        if(!empty($this->image))
        {   $dir = '/web/uploads/'.self::DIR_NAME.'/';
            $conn_id = Users::connectFtp();
            if($this->icon != null){
                if(ftp_size($conn_id, $dir.$this->icon) != -1){
                    ftp_delete($conn_id, $dir . $this->icon);
                }
            }
            $fileName = $this->image->baseName . '.' . $this->image->extension;
            $ftp_path = $dir.$fileName;
            $ret = ftp_nb_put($conn_id, $ftp_path, $this->image->tempName, FTP_BINARY);
            while ($ret == FTP_MOREDATA) {
                $ret = ftp_nb_continue($conn_id);
            }
            if($ret != FTP_FINISHED){
                return "При загрузке файла произошла ошибка...";
            }
            Yii::$app->db->createCommand()->update('social_networks', ['icon' => $fileName], [ 'id' => $this->id ])->execute();
        }
    }
}
