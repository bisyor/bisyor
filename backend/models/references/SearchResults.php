<?php

namespace backend\models\references;

use Yii;
use yii\helpers\ArrayHelper;

/**
 * This is the model class for table "search_results".
 *
 * @property int $id
 * @property int|null $pid
 * @property int|null $region_id
 * @property string|null $query
 * @property int|null $counter
 * @property int|null $hits
 * @property string|null $last_time
 */
class SearchResults extends \yii\db\ActiveRecord
{
    public $site;
    public $android;
    public $ios;
    public $telegram_bot;
    /**
     * {@inheritdoc}
     */
    public static function tableName()
    {
        return 'search_results';
    }

    /**
     * {@inheritdoc}
     */
    public function rules()
    {
        return [
            [['pid', 'region_id', 'counter', 'hits','district_id','user_id'], 'default', 'value' => null],
            [['pid', 'region_id', 'counter', 'hits','district_id','user_id','from_device'], 'integer'],
            [['last_time','date_cr'], 'safe'],
            [['query'], 'string', 'max' => 255],
            [['region_id'], 'exist', 'skipOnError' => true, 'targetClass' => Districts::className(), 'targetAttribute' => ['region_id' => 'id']],
        ];
    }

    /**
     * {@inheritdoc}
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'pid' => 'Pid',
            'region_id' => 'Регион/Район',
            'district_id' => 'Регион/Район',
            'query' => 'Поисковые запросы',
            'counter' => 'Всего',
            'hits' => 'Успешные',
            'last_time' => 'Последний поиск',
            'date_cr' => 'Дата создания',
            'from_device' => 'Устройство',
        ];
    }

    public function getRegion()
    {
        return $this->hasOne(Regions::className(), ['id' => 'region_id']);
    }

    public function getDistricts()
    {
        return $this->hasOne(Districts::className(), ['id' => 'district_id']);
    }

    public function getRegions()
    {
        return $this->hasOne(Districts::className(), ['id' => 'region_id'])->with('region');
    }

    public function beforeSave($insert)
    {
        if($this->isNewRecord){
            $this->date_cr = date('Y-m-d H:i');
        }
        return parent::beforeSave($insert); // TODO: Change the autogenerated stub
    }
}
