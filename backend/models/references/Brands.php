<?php

namespace backend\models\references;

use backend\models\users\Users;
use Yii;

/**
 * This is the model class for table "brands".
 *
 * @property int $id
 * @property string|null $name Наименование
 * @property string|null $date_cr Дата создание
 * @property int|null $sorting Сортировка
 * @property bool|null $enabled Вкл/Откл
 */
class Brands extends \yii\db\ActiveRecord
{
    /**
     * {@inheritdoc}
     */
    const ACTIVE_STATUS = 1;
    const NO_ACTIVE_STATUS = 0;
    const DIR_NAME = "brands";
    public $images;
    public static function tableName()
    {
        return 'brands';
    }

    /**
     * {@inheritdoc}
     */
    public function rules()
    {
        return [
            [['sorting'], 'default', 'value' => null],
            [['sorting'], 'integer'],
            [['name'], 'required'],
            [['enabled'], 'boolean'],
            [['name','image'], 'string', 'max' => 255],
            ['images', 'safe'],
            [['images'], 'file', 'skipOnEmpty' => true, 'extensions' => 'png, jpg, jpeg, ico,',],
        ];
    }

    /**
     * {@inheritdoc}
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'name' => 'Наименование',
            'sorting' => 'Сортировка',
            'enabled' => 'Статус',
            'image' => 'Картинка'
        ];
    }


    /**
     * @return string
     */
    public function statusname()
    {
        if($this->status == self::ACTIVE_STATUS) return 'Активно';
        else return 'Не активно';
    }


    /**
     * barndni udalitgandan song rasmini xam ochirib tashlash
     * @return bool
     */
    public function beforeDelete()
    {
        $dir = '/web/uploads/'.self::DIR_NAME.'/';
        $conn_id = Users::connectFtp();
        if($this->image != null){
            if(ftp_size($conn_id, $dir.$this->image) != -1){
                ftp_delete($conn_id, $dir . $this->image);
            }
        }
        return parent::beforeDelete(); // TODO: Change the autogenerated stub
    }

    public static function getStatusList()
    {
        return [
            self::ACTIVE_STATUS => 'Активно',
            self::NO_ACTIVE_STATUS => 'Не активно'
        ];
    }


    /**
     * rasm yuklash
     * @return string
     * @throws \yii\db\Exception
     */
    public function upload()
    {
        if(!empty($this->images))
        {   $dir = '/web/uploads/'.self::DIR_NAME.'/';
            $conn_id = Users::connectFtp();
            if($this->image != null){
                if(ftp_size($conn_id, $dir.$this->image) != -1){
                    ftp_delete($conn_id, $dir . $this->image);
                }
            }
            $fileName = $this->images->baseName . '.' . $this->images->extension;
            $ftp_path = $dir.$fileName;
            $ret = ftp_nb_put($conn_id, $ftp_path, $this->images->tempName, FTP_BINARY);
            while ($ret == FTP_MOREDATA) {
                $ret = ftp_nb_continue($conn_id);
            }
            if($ret != FTP_FINISHED){
                return "При загрузке файла произошла ошибка...";
            }
            Yii::$app->db->createCommand()->update('brands', ['image' => $fileName], [ 'id' => $this->id ])->execute();
        }
    }
}
